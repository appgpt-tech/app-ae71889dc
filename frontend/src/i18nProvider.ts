//Source code generated by AppGPT (www.appgpt.tech)
import { mergeTranslations } from 'ra-core';
import polyglotI18nProvider from 'ra-i18n-polyglot';
import enOriginal from 'ra-language-english';
import frOriginal from 'ra-language-french';

const enResources = {
  resources: {
    Wingo: {
      name: 'Wingo',
      fields: {
        GameName: 'Game Name',
        DrawFrequency: 'Draw Frequency',
        ColourPrediction: 'Colour Prediction',
        BigSmall: 'Big Small',
        BettingOptions: 'Betting Options',
        id: 'id',
      },
    },
    Draws: {
      name: 'Draws',
      fields: {
        DrawTime: 'Draw Time',
        WinningNumber: 'Winning Number',
        WinningColour: 'Winning Colour',
        id: 'id',
      },
    },
    Tickets: {
      name: 'Tickets',
      fields: {
        TicketID: 'Ticket Id',
        PlayersNumberChoice: 'Players Number Choice',
        PlayersColourChoice: 'Players Colour Choice',
        AmountBet: 'Amount Bet',
        id: 'id',
      },
    },
    Users: {
      name: 'Users',
      fields: {
        UserName: 'User Name',
        Email: 'Email',
        Balance: 'Balance',
        id: 'id',
      },
    },
  },
};
const frResources = {
  resources: {
    Wingo: {
      name: 'Wingo (fr)',
      fields: {
        GameName: 'Game Name (fr)',
        DrawFrequency: 'Draw Frequency (fr)',
        ColourPrediction: 'Colour Prediction (fr)',
        BigSmall: 'Big Small (fr)',
        BettingOptions: 'Betting Options (fr)',
        id: 'id',
      },
    },
    Draws: {
      name: 'Draws (fr)',
      fields: {
        DrawTime: 'Draw Time (fr)',
        WinningNumber: 'Winning Number (fr)',
        WinningColour: 'Winning Colour (fr)',
        id: 'id',
      },
    },
    Tickets: {
      name: 'Tickets (fr)',
      fields: {
        TicketID: 'Ticket Id (fr)',
        PlayersNumberChoice: 'Players Number Choice (fr)',
        PlayersColourChoice: 'Players Colour Choice (fr)',
        AmountBet: 'Amount Bet (fr)',
        id: 'id',
      },
    },
    Users: {
      name: 'Users (fr)',
      fields: {
        UserName: 'User Name (fr)',
        Email: 'Email (fr)',
        Balance: 'Balance (fr)',
        id: 'id',
      },
    },
  },
};

const en = mergeTranslations(enOriginal, enResources);
const fr = mergeTranslations(frOriginal, frResources);

const translations = { en, fr };
export const i18nProvider = polyglotI18nProvider(
  (locale) => translations[locale],
  'en', //default locale
  [
    { locale: 'en', name: 'English' },
    { locale: 'fr', name: 'Fran√ßais' },
  ],
);
